[{"title":"利用 Github Page 部署 Hexo 博客的操作记录","date":"2022-05-07T08:36:09.000Z","url":"/posts/3931055798.html","tags":[["Hexo","/tags/Hexo/"],["Github Page","/tags/Github-Page/"],["Github Actions","/tags/Github-Actions/"]],"categories":[["操作记录","/categories/%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/"]],"content":"Tips这又是一个教你部署 Hexo 的教程，尽管网上已经有大量类似的文章….. 前提 本地安装 hexo-cli 程序； 创建一个用于部署站点的 GitHub 仓库。 安装 hexo-cli 程序参考官方文档，先安装 nodejs 环境，再安装 hexo-cli 程序： Windows 用户可以看 nodejs 官网的安装教程。 创建 GitHub 仓库GitHub 上创建一个 Public 仓库，仓库名为 用户名.github.io。 构建站点初始化使用 hexo 工具创建站点： 修改 _config.yml，补充基本信息，例如： 自动部署官方文档已经给了 Github Action 的配置（简中文档还是万年不更新！）。 创建 .github/workflows/pages.yml 文件： GITHUB_TOKEN 这个是默认就存在，不需要自己创建。 由于上述的脚本会把生成的站点静态文件推送到 gh-pages 分支，因此我们还需要修改 Action 读写仓库的权限。 在仓库页面点击 Settings -&gt; Actions -&gt; General，将 Workflow permissions 权限改为 Read and write permissions。 然后 commit 一下，GitHub Actions 就可以自动构建、部署站点了。最后我们还需要将 Settings -&gt; Pages 中将 source 改为 gh-pages。 主题推荐推荐使用 submodule 的方式安装主题，可以获取最新的主题更新。 Cards：本博客目前使用的主题 插件推荐 hexo-abbrlink：优化文章链接 结尾写博客还是靠坚持，样式这些差不多就好了！"},{"title":"分类","date":"2022-05-07T08:06:06.000Z","url":"/categories/index.html","categories":[[" ",""]]},{"date":"2022-05-11T07:25:11.129Z","url":"/friends/index.html","categories":[[" ",""]]},{"title":"搜索","date":"2022-05-07T08:09:50.000Z","url":"/search/index.html","categories":[[" ",""]]},{"title":"标签","date":"2022-05-07T08:04:10.000Z","url":"/tags/index.html","categories":[[" ",""]]}]